name: Build and Push Microservices

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: kajal909
  DOCKERHUB_REPO: kajal909/microservices

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      catalogue: ${{ steps.filter.outputs.catalogue }}
      frontend: ${{ steps.filter.outputs.frontend }}
      recommendation: ${{ steps.filter.outputs.recommendation }}
      voting: ${{ steps.filter.outputs.voting }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            catalogue:
              - 'catalogue/**'
            frontend:
              - '/frontend/**'
            recommendation:
              - '/recommendation/**'
            voting:
              - '/voting/**'

  build-catalogue:
    needs: changes
    if: ${{ needs.changes.outputs.catalogue == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./catalogue
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:catalogue-latest,${{ env.DOCKERHUB_REPO }}:catalogue-${{ github.sha }}

  build-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:frontend-latest,${{ env.DOCKERHUB_REPO }}:frontend-${{ github.sha }}

  build-recommendation:
    needs: changes
    if: ${{ needs.changes.outputs.recommendation == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./recommendation
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:recommendation-latest,${{ env.DOCKERHUB_REPO }}:recommendation-${{ github.sha }}

  build-voting:
    needs: changes
    if: ${{ needs.changes.outputs.voting == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./voting
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:voting-latest,${{ env.DOCKERHUB_REPO }}:voting-${{ github.sha }}

  summary:
    needs: [changes, build-catalogue, build-frontend, build-recommendation, build-voting]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate build summary
        run: |
          echo "# Microservices Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.changes.outputs.catalogue }}" == "true" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ needs.build-catalogue.result }}" == "success" ]]; then
              echo "✅ **Catalogue**: ${{ env.DOCKERHUB_REPO }}:catalogue-latest" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Catalogue**: Build failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Catalogue**: No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.changes.outputs.frontend }}" == "true" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ needs.build-frontend.result }}" == "success" ]]; then
              echo "✅ **Frontend**: ${{ env.DOCKERHUB_REPO }}:frontend-latest" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Frontend**: Build failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Frontend**: No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.changes.outputs.recommendation }}" == "true" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ needs.build-recommendation.result }}" == "success" ]]; then
              echo "✅ **Recommendation**: ${{ env.DOCKERHUB_REPO }}:recommendation-latest" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Recommendation**: Build failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Recommendation**: No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.changes.outputs.voting }}" == "true" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ needs.build-voting.result }}" == "success" ]]; then
              echo "✅ **Voting**: ${{ env.DOCKERHUB_REPO }}:voting-latest" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Voting**: Build failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Voting**: No changes detected" >> $GITHUB_STEP_SUMMARY
          fi